<Window x:Class="EasyToDo.Views.NoteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title, FallbackValue='Note'}" 
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResizeWithGrip"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="Auto"
        UseLayoutRounding="True"
        FontFamily="Segoe UI Emoji, Segoe UI, Arial Unicode MS"
        MinWidth="250"
        MinHeight="200">
    <Window.Resources>
        <Style x:Key="CircleCheckBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Ellipse x:Name="Circle" Width="16" Height="16" Stroke="Gray" StrokeThickness="2" Fill="White"/>
                            <Ellipse x:Name="CheckMark" Width="10" Height="10" Fill="Gray" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CheckMark" Property="Fill" Value="#FF0078D7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Name="TitleBar" LastChildFill="True">
            <DockPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="🔄 Refresh Note" Click="RefreshNote_Click" ToolTip="Refresh note if it becomes unresponsive"/>
                    <MenuItem Header="🏥 Health Check" Click="HealthCheck_Click" ToolTip="Run manual health check"/>
                </ContextMenu>
            </DockPanel.ContextMenu>
            <Button x:Name="PinButton"
                    Content="&#x1F4CC;"
                    Width="20"
                    Height="20"
                    Margin="0,0,5,0"
                    ToolTip="Pin window on top"
                    Click="PinButton_Click"
                    Background="Transparent"
                    BorderThickness="0"
                    FontSize="16"
                    FontWeight="Bold"
                    FontFamily="Segoe UI Emoji, Segoe UI Symbol, Segoe UI, Arial Unicode MS, Lucida Sans Unicode"/>
            <TextBox x:Name="TitleTextBox" 
                     Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                     FontSize="16" 
                     FontWeight="Bold"
                     Background="Transparent"
                     BorderThickness="0"/>
        </DockPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5">
            <TextBlock Text="Color: " VerticalAlignment="Center"/>
            <ComboBox x:Name="ColorPicker" Width="60" SelectionChanged="ColorPicker_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Width="24" Height="20" 
                                  Fill="{Binding Color}" 
                                  Stroke="Gray" 
                                  StrokeThickness="1"
                                  Margin="2"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <ScrollViewer Grid.Row="2" 
                     VerticalScrollBarVisibility="Auto" 
                     HorizontalScrollBarVisibility="Disabled">
            <ItemsControl x:Name="ItemsListBox" 
                         Background="Transparent"
                         BorderThickness="0"
                         ItemsSource="{Binding Items}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <!-- Drop indicator line (hidden by default) -->
                            <Rectangle x:Name="DropIndicator"
                                     Height="2"
                                     Fill="#4A90E2"
                                     Opacity="0.7"
                                     Margin="10,0"
                                     Visibility="Collapsed"/>
                            
                            <Border x:Name="ItemBorder" 
                                    Background="Transparent" 
                                    Padding="2"
                                    AllowDrop="True"
                                    PreviewMouseMove="ItemBorder_PreviewMouseMove"
                                    PreviewMouseLeftButtonUp="ItemBorder_PreviewMouseLeftButtonUp"
                                    DragOver="ItemBorder_DragOver"
                                    Drop="ItemBorder_Drop"
                                    DragEnter="ItemBorder_DragEnter"
                                    DragLeave="ItemBorder_DragLeave">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Drag Handle -->
                                      <Canvas Grid.Column="0"
                                              Width="10"
                                              Height="14"
                                              Margin="0,0,5,0"
                                              Cursor="Hand"
                                              VerticalAlignment="Center"
                                              Background="Transparent"
                                              PreviewMouseLeftButtonDown="DragHandle_PreviewMouseLeftButtonDown">
                                          <Canvas.Style>
                                              <Style TargetType="Canvas">
                                                  <Setter Property="Visibility" Value="Hidden"/>
                                                  <Style.Triggers>
                                                      <DataTrigger Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True">
                                                          <Setter Property="Visibility" Value="Visible"/>
                                                      </DataTrigger>
                                                  </Style.Triggers>
                                              </Style>
                                          </Canvas.Style>
                                          <!-- Horizontal lines for grip (perfectly spaced) -->
                                          <Rectangle Width="8" Height="1.5" Fill="#999999" Canvas.Left="1" Canvas.Top="2" RadiusX="0.5" RadiusY="0.5"/>
                                          <Rectangle Width="8" Height="1.5" Fill="#999999" Canvas.Left="1" Canvas.Top="6" RadiusX="0.5" RadiusY="0.5"/>
                                          <Rectangle Width="8" Height="1.5" Fill="#999999" Canvas.Left="1" Canvas.Top="10" RadiusX="0.5" RadiusY="0.5"/>
                                      </Canvas>

                                    <!-- Critical Button - Hidden for headings -->
                                    <Button Grid.Column="1" 
                                           Content="🚨"
                                           Width="18"
                                           Height="18"
                                           Margin="0,0,3,0"
                                           PreviewMouseLeftButtonDown="CriticalButton_PreviewMouseLeftButtonDown"
                                           DataContext="{Binding}"
                                           Background="Transparent"
                                           BorderThickness="0"
                                           FontSize="12"
                                           FontFamily="Segoe UI Emoji"
                                           VerticalAlignment="Center"
                                           ToolTip="Mark as critical"
                                           Foreground="Red">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Opacity" Value="0.3"/>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Setter Property="Foreground" Value="Red"/>
                                                <Style.Triggers>
                                                    <!-- Hide for headings -->
                                                    <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True"/>
                                                            <Condition Binding="{Binding IsHeading}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding IsCritical}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                        <Setter Property="Opacity" Value="1.0"/>
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!-- Checkbox - Hidden for headings -->
                                    <CheckBox Grid.Column="2" 
                                             IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                                             Margin="0,0,5,0" 
                                             PreviewMouseLeftButtonDown="CheckBox_PreviewMouseLeftButtonDown"
                                             DataContext="{Binding}"
                                             VerticalAlignment="Center">
                                        <CheckBox.Style>
                                            <Style TargetType="CheckBox" BasedOn="{StaticResource CircleCheckBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>

                                    <!-- Text Content with different margins for headings -->
                                    <Grid Grid.Column="3" Background="Transparent" MouseDown="TextBlock_MouseDown">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Setter Property="Margin" Value="0"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                        <Setter Property="Margin" Value="5,0,0,0"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        
                                        <TextBlock Text="{Binding Text}" 
                                                   VerticalAlignment="Top"
                                                   Cursor="IBeam"
                                                   TextWrapping="Wrap"
                                                   FontFamily="Segoe UI Emoji, Segoe UI, Arial Unicode MS"
                                                   TextOptions.TextFormattingMode="Display"
                                                   TextOptions.TextRenderingMode="Auto"
                                                   UseLayoutRounding="True">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                            <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsCritical}" Value="True">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="Foreground" Value="#FF8B0000"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="Margin" Value="0,5,0,2"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
                                                 Visibility="Collapsed"
                                                 Name="EditTextBox"
                                                 LostFocus="EditTextBox_LostFocus"
                                                 KeyDown="EditTextBox_KeyDown"
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 TextWrapping="Wrap"
                                                 AcceptsReturn="True"
                                                 FontFamily="Segoe UI Emoji, Segoe UI, Arial Unicode MS"
                                                 TextOptions.TextFormattingMode="Display"
                                                 TextOptions.TextRenderingMode="Auto"
                                                 UseLayoutRounding="True">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </Grid>

                                    <!-- Paper Note Button - Hidden for headings -->
                                    <Button Grid.Column="4" 
                                           Content="📄"
                                           Width="18"
                                           Height="18"
                                           Margin="3,0,0,0"
                                           PreviewMouseLeftButtonDown="PaperNoteButton_PreviewMouseLeftButtonDown"
                                           DataContext="{Binding}"
                                           Background="Transparent"
                                           BorderThickness="0"
                                           FontSize="12"
                                           FontFamily="Segoe UI Emoji"
                                           VerticalAlignment="Center"
                                           ToolTip="Add/Edit text attachment">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Opacity" Value="0.3"/>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Style.Triggers>
                                                    <!-- Hide for headings -->
                                                    <DataTrigger Binding="{Binding IsHeading}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True"/>
                                                            <Condition Binding="{Binding IsHeading}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding HasTextAttachment}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                        <Setter Property="Opacity" Value="1.0"/>
                                                        <Setter Property="Foreground" Value="#FF2E7D32"/>
                                                        <Setter Property="Content" Value="📝"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    
                                    <!-- Delete Button -->
                                    <Button Grid.Column="5" 
                                           Content="✕"
                                           Width="20"
                                           Height="20"
                                           Margin="5,0,0,0"
                                           PreviewMouseLeftButtonDown="DeleteItem_PreviewMouseLeftButtonDown"
                                           DataContext="{Binding}"
                                           Background="Transparent"
                                           BorderThickness="0"
                                           Foreground="Red"
                                           FontWeight="Bold"
                                           FontSize="14"
                                           VerticalAlignment="Center">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <Separator Grid.Row="3" Margin="0,5" Opacity="0.5"/>
        
        <!-- Input row with heading button -->
        <Grid Grid.Row="4" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Heading Button -->
            <Button x:Name="HeadingButton"
                    Grid.Column="0"
                    Content="H"
                    Width="20"
                    Height="20"
                    Margin="0,0,5,0"
                    ToolTip="Add heading"
                    Click="HeadingButton_Click"
                    Background="Transparent"
                    BorderThickness="1"
                    BorderBrush="Gray"
                    FontWeight="Bold"
                    FontSize="12"
                    VerticalAlignment="Center">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Opacity" Value="0.6"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1.0"/>
                                <Setter Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <TextBox x:Name="NewItemTextBox" 
                     Grid.Column="2"
                     Background="Transparent"
                     BorderThickness="0"
                     KeyDown="NewItemTextBox_KeyDown"
                     GotFocus="NewItemTextBox_GotFocus"
                     LostFocus="NewItemTextBox_LostFocus"
                     Text="Type here to add a new item... (Ctrl+Enter to add)"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     FontFamily="Segoe UI Emoji, Segoe UI, Arial Unicode MS"
                     TextOptions.TextFormattingMode="Display"
                     TextOptions.TextRenderingMode="Auto"
                     UseLayoutRounding="True"
                     ToolTip="Enter adds single-line items, Enter creates new lines in multi-line text, Ctrl+Enter always adds item"/>
        </Grid>
    </Grid>
</Window>